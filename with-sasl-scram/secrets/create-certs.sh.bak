#!/bin/bash

set -o nounset \
    -o errexit \
    -o verbose \
    -o xtrace

rm -f *.pem *.crt *.csr *.key *.jks index.txt* serial.txt*

# This script is written based on
# https://stackoverflow.com/questions/21297139/how-do-you-sign-a-certificate-signing-request-with-your-certification-authority/21340898#21340898

# Generate CA key
openssl req -x509 -config openssl-ca.cnf -new -nodes -out cacert.pem -outform PEM  -subj '/CN=ca1.test.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US'


# openssl req -new -config ./openssl.cnf -x509 -keyout snakeoil-ca-1.key -out snakeoil-ca-1.crt -days 365 -subj '/CN=ca1.test.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US' -passin pass:confluent -passout pass:confluent
# openssl req -new -x509 -keyout snakeoil-ca-2.key -out snakeoil-ca-2.crt -days 365 -subj '/CN=ca2.test.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US' -passin pass:confluent -passout pass:confluent

:> index.txt

SERIAL=1
echo "0$SERIAL" > serial.txt

# Kafkacat
#openssl req -config openssl-server.cnf -newkey rsa:2048 -nodes -out kafkacat.client.csr -outform PEM  -subj '/CN=quickstart.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US' 
#openssl ca -batch -config openssl-ca.cnf -policy signing_policy -extensions signing_req -out kafkacat.client.cert.pem -infiles kafkacat.client.csr 

#openssl genrsa -des3 -passout "pass:confluent" -out kafkacat.client.key 1024
#openssl req -passin "pass:confluent" -passout "pass:confluent" -key kafkacat.client.key -new -out kafkacat.client.req -subj '/CN=kafkacat.test.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US'
#openssl x509 -req -CA snakeoil-ca-1.crt -CAkey snakeoil-ca-1.key -in kafkacat.client.req -out kafkacat-ca1-signed.pem -days 9999 -CAcreateserial -passin "pass:confluent"


for i in broker1 broker2 broker3 producer consumer
do
	echo $i
  SERIAL=$((SERIAL + 1))
  echo "0$SERIAL" > serial.txt

 	# Create keystores
 	keytool -genkey -noprompt \
 				 -alias $i \
 				 -dname "CN=quickstart.confluent.io, OU=TEST, O=CONFLUENT, L=PaloAlto, S=Ca, C=US" \
 				 -keystore kafka.$i.keystore.jks \
 				 -keyalg RSA \
 				 -storepass confluent \
 				 -keypass confluent
 
 	# Create CSR, sign the key and import back into keystore
 	keytool -keystore kafka.$i.keystore.jks -alias $i -certreq -file kafka.$i.csr -storepass confluent -keypass confluent

  #openssl req -config openssl-server.cnf -newkey rsa:2048 -nodes -out kafka.$i.csr -outform PEM  -subj '/CN=quickstart.confluent.io/OU=TEST/O=CONFLUENT/L=PaloAlto/S=Ca/C=US' 
  openssl ca -batch -config openssl-ca.cnf -policy signing_policy -extensions signing_req -out kafka.$i.cert.pem -infiles kafka.$i.csr

  keytool -importcert -trustcacerts -alias CARoot -keystore kafka.$i.keystore.jks -storepass confluent -keypass confluent -file cacert.pem <<< "yes"
  keytool -importcert -alias $i -keystore kafka.$i.keystore.jks -storepass confluent -keypass confluent -file kafka.$i.cert.pem 

  keytool -importcert -trustcacerts -alias CARoot -keystore kafka.$i.truststore.jks -storepass confluent -keypass confluent -file cacert.pem <<< "yes"

#	# Create keystores
#	keytool -genkey -noprompt \
#				 -alias $i \
#				 -dname "CN=quickstart.confluent.io, OU=TEST, O=CONFLUENT, L=PaloAlto, S=Ca, C=US" \
#				 -keystore kafka.$i.keystore.jks \
#				 -keyalg RSA \
#				 -storepass confluent \
#				 -keypass confluent \
#         -ext san=dns:quickstart.confluent.io
#
#	# Create CSR, sign the key and import back into keystore
#	keytool -keystore kafka.$i.keystore.jks -alias $i -certreq -file $i.csr -storepass confluent -keypass confluent
#
#	openssl x509 -req -CA snakeoil-ca-1.crt -CAkey snakeoil-ca-1.key -in $i.csr -out $i-ca1-signed.crt -days 9999 -CAcreateserial -passin pass:confluent
#
#	keytool -keystore kafka.$i.keystore.jks -alias CARoot -import -file snakeoil-ca-1.crt -storepass confluent -keypass confluent -trustcacerts <<< "yes"
#
#	keytool -keystore kafka.$i.keystore.jks -alias $i -import -file $i-ca1-signed.crt -storepass confluent -keypass confluent -trustcacerts <<< "yes"
#
#	# Create truststore and import the CA cert.
#	keytool -keystore kafka.$i.truststore.jks -alias CARoot -import -file snakeoil-ca-1.crt -storepass confluent -keypass confluent -trustcacerts <<< "yes"

  echo "confluent" > ${i}_sslkey_creds
  echo "confluent" > ${i}_keystore_creds
  echo "confluent" > ${i}_truststore_creds
done
